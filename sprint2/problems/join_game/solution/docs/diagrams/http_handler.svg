<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="917px" preserveAspectRatio="none" style="width:2802px;height:917px;" version="1.1" viewBox="0 0 2802 917" width="2802px" zoomAndPan="magnify"><defs><filter height="300%" id="f10xdr39z2fge4" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[6e14b0b82605c135f8a1247963485e24]
class C_0000642481537988511217--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="99.2188" id="C_0000642481537988511217" style="stroke: #A80036; stroke-width: 1.5;" width="228" x="817.5" y="97"/><ellipse cx="845.55" cy="113" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M848.5188,118.6406 Q847.9406,118.9375 847.3,119.0781 Q846.6594,119.2344 845.9563,119.2344 Q843.4563,119.2344 842.1281,117.5938 Q840.8156,115.9375 840.8156,112.8125 Q840.8156,109.6875 842.1281,108.0313 Q843.4563,106.375 845.9563,106.375 Q846.6594,106.375 847.3,106.5313 Q847.9563,106.6875 848.5188,106.9844 L848.5188,109.7031 Q847.8938,109.125 847.3,108.8594 Q846.7063,108.5781 846.0813,108.5781 Q844.7375,108.5781 844.05,109.6563 Q843.3625,110.7188 843.3625,112.8125 Q843.3625,114.9063 844.05,115.9844 Q844.7375,117.0469 846.0813,117.0469 Q846.7063,117.0469 847.3,116.7813 Q847.8938,116.5 848.5188,115.9219 L848.5188,118.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="167" x="862.45" y="117.1543">http_handler::ContentType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="818.5" x2="1044.5" y1="129" y2="129"/><ellipse cx="828.5" cy="140" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="837.5" y="143.2104">ContentType() = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="818.5" x2="1044.5" y1="149.8047" y2="149.8047"/><ellipse cx="828.5" cy="160.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="192" x="837.5" y="164.0151">APP_JSON : const std::string_view</text><ellipse cx="828.5" cy="173.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="837.5" y="176.8198">TEXT_HTML : const std::string_view</text><ellipse cx="828.5" cy="186.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="837.5" y="189.6245">TEXT_PLAIN : const std::string_view</text><!--MD5=[3d24e7d9a1987e8858506cbd5628e1e5]
class C_0000529223606003699735--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="158.4375" id="C_0000529223606003699735" style="stroke: #A80036; stroke-width: 1.5;" width="1077" x="6" y="362"/><ellipse cx="436.25" cy="378" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M439.2188,383.6406 Q438.6406,383.9375 438,384.0781 Q437.3594,384.2344 436.6563,384.2344 Q434.1563,384.2344 432.8281,382.5938 Q431.5156,380.9375 431.5156,377.8125 Q431.5156,374.6875 432.8281,373.0313 Q434.1563,371.375 436.6563,371.375 Q437.3594,371.375 438,371.5313 Q438.6563,371.6875 439.2188,371.9844 L439.2188,374.7031 Q438.5938,374.125 438,373.8594 Q437.4063,373.5781 436.7813,373.5781 Q435.4375,373.5781 434.75,374.6563 Q434.0625,375.7188 434.0625,377.8125 Q434.0625,379.9063 434.75,380.9844 Q435.4375,382.0469 436.7813,382.0469 Q437.4063,382.0469 438,381.7813 Q438.5938,381.5 439.2188,380.9219 L439.2188,383.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="208" x="456.75" y="382.1543">http_handler::ApiRequestHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="1082" y1="394" y2="394"/><ellipse cx="17" cy="405" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="26" y="408.2104">ApiRequestHandler(model::Game &amp; game, fs::path path) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7" x2="1082" y1="414.8047" y2="414.8047"/><ellipse cx="17" cy="425.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1051" x="26" y="429.0151">GameRequest&lt;Handler&gt;(http_handler::StringRequest &amp;&amp; request, const Handler &amp; json_response, const std::vector&lt;std::string&gt; &amp; path_components) : http_handler::StringResponse</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="435.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="738" x="26" y="441.8198">GetMapDetailsRequest&lt;Handler&gt;(std::string_view map_id, const Handler &amp; json_response) const : http_handler::StringResponse</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="448.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="563" x="26" y="454.6245">GetMapsRequest&lt;Handler&gt;(const Handler &amp; json_response) const : http_handler::StringResponse</text><ellipse cx="17" cy="464.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="756" x="26" y="467.4292">HandleRequest&lt;Handler&gt;(http_handler::StringRequest &amp;&amp; request, const Handler &amp; json_response) : http_handler::StringResponse</text><ellipse cx="17" cy="477.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1040" x="26" y="480.2339">MapRequest&lt;Handler&gt;(http_handler::StringRequest &amp;&amp; request, const Handler &amp; json_response, const std::vector&lt;std::string&gt; &amp; path_components) : http_handler::StringResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="1082" y1="486.8281" y2="486.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="494.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="501.0386">game_ : model::Game &amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="507.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26" y="513.8433">root_dir_ : fs::path</text><!--MD5=[10a3f8fe2e5641775774a50cd176d17d]
class C_0002160141078278443579--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="107.2188" id="C_0002160141078278443579" style="stroke: #A80036; stroke-width: 1.5;" width="788" x="1118.5" y="387.5"/><ellipse cx="1403.25" cy="403.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1406.2188,409.1406 Q1405.6406,409.4375 1405,409.5781 Q1404.3594,409.7344 1403.6563,409.7344 Q1401.1563,409.7344 1399.8281,408.0938 Q1398.5156,406.4375 1398.5156,403.3125 Q1398.5156,400.1875 1399.8281,398.5313 Q1401.1563,396.875 1403.6563,396.875 Q1404.3594,396.875 1405,397.0313 Q1405.6563,397.1875 1406.2188,397.4844 L1406.2188,400.2031 Q1405.5938,399.625 1405,399.3594 Q1404.4063,399.0781 1403.7813,399.0781 Q1402.4375,399.0781 1401.75,400.1563 Q1401.0625,401.2188 1401.0625,403.3125 Q1401.0625,405.4063 1401.75,406.4844 Q1402.4375,407.5469 1403.7813,407.5469 Q1404.4063,407.5469 1405,407.2813 Q1405.5938,407 1406.2188,406.4219 L1406.2188,409.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="1423.75" y="407.6543">http_handler::FileRequestHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1119.5" x2="1905.5" y1="419.5" y2="419.5"/><ellipse cx="1129.5" cy="430.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1138.5" y="433.7104">FileRequestHandler(model::Game &amp; game, fs::path path) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1119.5" x2="1905.5" y1="440.3047" y2="440.3047"/><ellipse cx="1129.5" cy="451.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="762" x="1138.5" y="454.5151">HandleRequest&lt;Handler&gt;(http_handler::StringRequest &amp;&amp; request, const Handler &amp; json_response) : http_handler::ResponseVariant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1119.5" x2="1905.5" y1="461.1094" y2="461.1094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1126.5" y="469.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1138.5" y="475.3198">game_ : model::Game &amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1126.5" y="481.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1138.5" y="488.1245">root_dir_ : fs::path</text><!--MD5=[416e52bab62f6c7161fb16ee7378b1ad]
class C_0001715404582304047665--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="276.875" id="C_0001715404582304047665" style="stroke: #A80036; stroke-width: 1.5;" width="863" x="1081" y="8"/><ellipse cx="1413.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1416.7188,29.6406 Q1416.1406,29.9375 1415.5,30.0781 Q1414.8594,30.2344 1414.1563,30.2344 Q1411.6563,30.2344 1410.3281,28.5938 Q1409.0156,26.9375 1409.0156,23.8125 Q1409.0156,20.6875 1410.3281,19.0313 Q1411.6563,17.375 1414.1563,17.375 Q1414.8594,17.375 1415.5,17.5313 Q1416.1563,17.6875 1416.7188,17.9844 L1416.7188,20.7031 Q1416.0938,20.125 1415.5,19.8594 Q1414.9063,19.5781 1414.2813,19.5781 Q1412.9375,19.5781 1412.25,20.6563 Q1411.5625,21.7188 1411.5625,23.8125 Q1411.5625,25.9063 1412.25,26.9844 Q1412.9375,28.0469 1414.2813,28.0469 Q1414.9063,28.0469 1415.5,27.7813 Q1416.0938,27.5 1416.7188,26.9219 L1416.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="189" x="1434.25" y="28.1543">http_handler::RequestHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1082" x2="1943" y1="40" y2="40"/><ellipse cx="1092" cy="51" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="628" x="1101" y="54.2104">RequestHandler(model::Game &amp; game, http_handler::RequestHandler::Strand api_strand, fs::path path) : void</text><ellipse cx="1092" cy="63.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="1101" y="67.0151">RequestHandler(const http_handler::RequestHandler &amp;) = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1082" x2="1943" y1="73.6094" y2="73.6094"/><ellipse cx="1092" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="538" x="1101" y="87.8198">operator=(const http_handler::RequestHandler &amp;) = deleted : http_handler::RequestHandler &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1082" x2="1943" y1="94.4141" y2="94.4141"/><ellipse cx="1092" cy="105.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="837" x="1101" y="108.6245">operator()&lt;Body,Allocator,Send&gt;(http::request&lt;Body,http::basic_fields&lt;Allocator&gt;&gt; &amp;&amp; req, Send &amp;&amp; send) : http::response&lt;http::empty_body&gt;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1082" x2="1943" y1="115.2188" y2="115.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="123.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="769" x="1101" y="129.4292">CopyResponseWithoutBody(const http_handler::ResponseVariant &amp; response) const : boost::beast::http::message&lt;http::empty_body&gt;</text><ellipse cx="1092" cy="139.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="1101" y="142.2339">HandleRequest(http_handler::StringRequest &amp;&amp; req) : http_handler::ResponseVariant</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="148.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1101" y="155.0386">handleIntermediateRequest() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="161.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1101" y="167.8433">handleMap1Request() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="174.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1101" y="180.6479">handleMapsRequest() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="187.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="1101" y="193.4526">handleRootRequest() : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1082" x2="1943" y1="200.0469" y2="200.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="208.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1101" y="214.2573">api_handler_ : http_handler::ApiRequestHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="220.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1101" y="227.062">api_strand_ : http_handler::RequestHandler::Strand</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="233.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1101" y="239.8667">file_handler_ : http_handler::FileRequestHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="246.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1101" y="252.6714">game_ : model::Game &amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="259.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1101" y="265.4761">root_dir_ : fs::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="272.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1101" y="278.2808">router_ : std::unique_ptr&lt;router::Router&gt;</text><!--MD5=[a7560acecc9940d97f8e5a87b7e2ea98]
class C_0000187824893867546430--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="128.0234" id="C_0000187824893867546430" style="stroke: #A80036; stroke-width: 1.5;" width="686" x="1979.5" y="82.5"/><ellipse cx="2129.75" cy="98.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2132.7188,104.1406 Q2132.1406,104.4375 2131.5,104.5781 Q2130.8594,104.7344 2130.1563,104.7344 Q2127.6563,104.7344 2126.3281,103.0938 Q2125.0156,101.4375 2125.0156,98.3125 Q2125.0156,95.1875 2126.3281,93.5313 Q2127.6563,91.875 2130.1563,91.875 Q2130.8594,91.875 2131.5,92.0313 Q2132.1563,92.1875 2132.7188,92.4844 L2132.7188,95.2031 Q2132.0938,94.625 2131.5,94.3594 Q2130.9063,94.0781 2130.2813,94.0781 Q2128.9375,94.0781 2128.25,95.1563 Q2127.5625,96.2188 2127.5625,98.3125 Q2127.5625,100.4063 2128.25,101.4844 Q2128.9375,102.5469 2130.2813,102.5469 Q2130.9063,102.5469 2131.5,102.2813 Q2132.0938,102 2132.7188,101.4219 L2132.7188,104.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="2150.25" y="102.6543">http_handler::LoggingRequestHandler</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="137" x="2531.5" y="79.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="135" x="2532.5" y="91.6387">SomeRequestHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1980.5" x2="2664.5" y1="114.5" y2="114.5"/><ellipse cx="1990.5" cy="125.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1999.5" y="128.7104">LoggingRequestHandler(SomeRequestHandler &amp; handler) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1980.5" x2="2664.5" y1="135.3047" y2="135.3047"/><ellipse cx="1990.5" cy="146.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="660" x="1999.5" y="149.5151">operator()&lt;Body,Allocator,Send&gt;(http::request&lt;Body,http::basic_fields&lt;Allocator&gt;&gt; &amp;&amp; req, Send &amp;&amp; send) : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1980.5" x2="2664.5" y1="156.1094" y2="156.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1987.5" y="164.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="533" x="1999.5" y="170.3198">LogRequest&lt;Body,Allocator&gt;(http::request&lt;Body,http::basic_fields&lt;Allocator&gt;&gt; &amp; req) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1987.5" y="176.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="575" x="1999.5" y="183.1245">LogResponse(boost::beast::http::message&lt;http::empty_body&gt; &amp; response, int resp_duration) : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1980.5" x2="2664.5" y1="189.7188" y2="189.7188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1987.5" y="197.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="1999.5" y="203.9292">request_handler_ : SomeRequestHandler &amp;</text><!--MD5=[5eabab69618c4b9d235b4b450a835c76]
class C_0001721980744413703462--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="99.2188" id="C_0001721980744413703462" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="2149" y="807"/><ellipse cx="2310.75" cy="823" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2313.7188,828.6406 Q2313.1406,828.9375 2312.5,829.0781 Q2311.8594,829.2344 2311.1563,829.2344 Q2308.6563,829.2344 2307.3281,827.5938 Q2306.0156,825.9375 2306.0156,822.8125 Q2306.0156,819.6875 2307.3281,818.0313 Q2308.6563,816.375 2311.1563,816.375 Q2311.8594,816.375 2312.5,816.5313 Q2313.1563,816.6875 2313.7188,816.9844 L2313.7188,819.7031 Q2313.0938,819.125 2312.5,818.8594 Q2311.9063,818.5781 2311.2813,818.5781 Q2309.9375,818.5781 2309.25,819.6563 Q2308.5625,820.7188 2308.5625,822.8125 Q2308.5625,824.9063 2309.25,825.9844 Q2309.9375,827.0469 2311.2813,827.0469 Q2311.9063,827.0469 2312.5,826.7813 Q2313.0938,826.5 2313.7188,825.9219 L2313.7188,828.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="2331.25" y="827.1543">router::TrieNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2150" x2="2583" y1="839" y2="839"/><ellipse cx="2160" cy="850" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2169" y="853.2104">TrieNode() = default : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2150" x2="2583" y1="859.8047" y2="859.8047"/><ellipse cx="2160" cy="870.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="2169" y="874.0151">children : std::unordered_map&lt;std::string,std::unique_ptr&lt;TrieNode&gt;&gt;</text><ellipse cx="2160" cy="883.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="2169" y="886.8198">handlers : std::vector&lt;ResponseMaker&gt;</text><ellipse cx="2160" cy="896.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="2169" y="899.6245">intermediateHandlers : std::vector&lt;ResponseMaker&gt;</text><!--MD5=[ee8b620d3ec73a9242213e9d97e74875]
class C_0000318064410950524216--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="132.8281" id="C_0000318064410950524216" style="stroke: #A80036; stroke-width: 1.5;" width="763" x="1985" y="597"/><ellipse cx="2327.25" cy="613" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2330.2188,618.6406 Q2329.6406,618.9375 2329,619.0781 Q2328.3594,619.2344 2327.6563,619.2344 Q2325.1563,619.2344 2323.8281,617.5938 Q2322.5156,615.9375 2322.5156,612.8125 Q2322.5156,609.6875 2323.8281,608.0313 Q2325.1563,606.375 2327.6563,606.375 Q2328.3594,606.375 2329,606.5313 Q2329.6563,606.6875 2330.2188,606.9844 L2330.2188,609.7031 Q2329.5938,609.125 2329,608.8594 Q2328.4063,608.5781 2327.7813,608.5781 Q2326.4375,608.5781 2325.75,609.6563 Q2325.0625,610.7188 2325.0625,612.8125 Q2325.0625,614.9063 2325.75,615.9844 Q2326.4375,617.0469 2327.7813,617.0469 Q2328.4063,617.0469 2329,616.7813 Q2329.5938,616.5 2330.2188,615.9219 L2330.2188,618.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="2347.75" y="617.1543">router::Trie</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1986" x2="2747" y1="629" y2="629"/><ellipse cx="1996" cy="640" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2005" y="643.2104">Trie() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1986" x2="2747" y1="649.8047" y2="649.8047"/><ellipse cx="1996" cy="660.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="737" x="2005" y="664.0151">AddRoute(const std::string &amp; method, const std::string &amp; path, router::ResponseMaker handler, bool intermediate = false) : void</text><ellipse cx="1996" cy="673.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="570" x="2005" y="676.8198">GetHandlers(const std::string &amp; method, const std::string &amp; path) : std::vector&lt;ResponseMaker&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1993" y="683.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="2005" y="689.6245">GetNode(router::TrieNode * node, const std::string &amp; segment) : router::TrieNode *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1993" y="696.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="2005" y="702.4292">SplitPath(const std::string &amp; path) : std::vector&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1986" x2="2747" y1="709.0234" y2="709.0234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1993" y="717.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2005" y="723.2339">root_ : std::unique_ptr&lt;TrieNode&gt;</text><!--MD5=[865a6c27ad354e37a9c33fd5f9018128]
class C_0001341948926424665450--><rect fill="#FEFECE" filter="url(#f10xdr39z2fge4)" height="107.2188" id="C_0001341948926424665450" style="stroke: #A80036; stroke-width: 1.5;" width="849" x="1942" y="387.5"/><ellipse cx="2317.75" cy="403.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2320.7188,409.1406 Q2320.1406,409.4375 2319.5,409.5781 Q2318.8594,409.7344 2318.1563,409.7344 Q2315.6563,409.7344 2314.3281,408.0938 Q2313.0156,406.4375 2313.0156,403.3125 Q2313.0156,400.1875 2314.3281,398.5313 Q2315.6563,396.875 2318.1563,396.875 Q2318.8594,396.875 2319.5,397.0313 Q2320.1563,397.1875 2320.7188,397.4844 L2320.7188,400.2031 Q2320.0938,399.625 2319.5,399.3594 Q2318.9063,399.0781 2318.2813,399.0781 Q2316.9375,399.0781 2316.25,400.1563 Q2315.5625,401.2188 2315.5625,403.3125 Q2315.5625,405.4063 2316.25,406.4844 Q2316.9375,407.5469 2318.2813,407.5469 Q2318.9063,407.5469 2319.5,407.2813 Q2320.0938,407 2320.7188,406.4219 L2320.7188,409.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="2338.25" y="407.6543">router::Router</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1943" x2="2790" y1="419.5" y2="419.5"/><ellipse cx="1953" cy="430.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1962" y="433.7104">Router() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1943" x2="2790" y1="440.3047" y2="440.3047"/><ellipse cx="1953" cy="451.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="823" x="1962" y="454.5151">AddRoute(const std::vector&lt;std::string&gt; &amp; methods, const std::string &amp; path, router::ResponseMaker handler, bool intermediate = false) : void</text><ellipse cx="1953" cy="464.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="1962" y="467.3198">Route(const router::StringRequest &amp; req) : router::ResponseVariant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1943" x2="2790" y1="473.9141" y2="473.9141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1950" y="481.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1962" y="488.1245">trie_ : std::unique_ptr&lt;Trie&gt;</text><!--MD5=[cc9cd94c6f74222b3ec6998c8444bfe0]
reverse link C_0001715404582304047665 to C_0002160141078278443579--><path d="M1512.5,298.39 C1512.5,330.33 1512.5,361.98 1512.5,387.22 " fill="none" id="C_0001715404582304047665&lt;-C_0002160141078278443579" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1512.5,285.19,1508.5066,291.1944,1512.5132,297.19,1516.5066,291.1856,1512.5,285.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1515.5" y="321.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="80" x="1525.5" y="328.0669">file_handler_</text><!--MD5=[a55925e6ad04643babfd609dc7976d55]
reverse link C_0001715404582304047665 to C_0000529223606003699735--><path d="M1068.37,283.53 C1066.74,284.02 1065.12,284.51 1063.5,285 C980.13,310.21 889.14,337.47 806.97,362 " fill="none" id="C_0001715404582304047665&lt;-C_0000529223606003699735" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1080.88,279.74,1073.9777,277.6524,1069.3959,283.2208,1076.2982,285.3084,1080.88,279.74" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="952.5" y="321.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="962.5" y="328.0669">api_handler_</text><!--MD5=[b399294ad30514492d14f3a4d93dd980]
reverse link C_0001715404582304047665 to C_0001341948926424665450--><path d="M1926.65,289.35 C2028.98,324.4 2132.29,359.78 2213.05,387.44 " fill="none" id="C_0001715404582304047665&lt;-C_0001341948926424665450" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1914.18,285.08,1918.5655,290.8043,1925.5362,288.9577,1921.1507,283.2335,1914.18,285.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2043.5" y="321.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="2053.5" y="328.0669">router_</text><!--MD5=[4f9ed8006df6fd8de66678e65e2b9e9e]
reverse link C_0001721980744413703462 to C_0001721980744413703462--><path d="M2597.42,845.21 C2610.92,847.92 2619,851.68 2619,856.5 C2619,862.73 2605.5,867.2 2584.23,869.9 " fill="none" id="C_0001721980744413703462&lt;-C_0001721980744413703462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2584.23,843.1,2589.5218,847.9986,2596.079,844.9979,2590.7871,840.0993,2584.23,843.1" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2630" cy="857.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="50" x="2637" y="861.0669">children</text><!--MD5=[f739de1b23f5d5199432ce7ea1949e0d]
reverse link C_0000318064410950524216 to C_0001721980744413703462--><path d="M2366.5,743.43 C2366.5,764.92 2366.5,787.58 2366.5,806.85 " fill="none" id="C_0000318064410950524216&lt;-C_0001721980744413703462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2366.5,730.23,2362.5,736.23,2366.5,742.23,2370.5,736.23,2366.5,730.23" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2369.5" y="766.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="2379.5" y="773.0669">root_</text><!--MD5=[6ae2fbcbe43f61ae93c32951608b3b56]
reverse link C_0001341948926424665450 to C_0000318064410950524216--><path d="M2366.5,507.56 C2366.5,535.78 2366.5,568.72 2366.5,596.95 " fill="none" id="C_0001341948926424665450&lt;-C_0000318064410950524216" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2366.5,494.54,2362.5,500.54,2366.5,506.54,2370.5,500.54,2366.5,494.54" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2369.5" y="556.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="2379.5" y="563.0669">trie_</text><!--MD5=[eb9aa1ac9251cd8918784d67f536d7d3]
@startuml
class "http_handler::ContentType" as C_0000642481537988511217
class C_0000642481537988511217 {
+ContentType() = deleted : void
__
{static} +APP_JSON : const std::string_view
{static} +TEXT_HTML : const std::string_view
{static} +TEXT_PLAIN : const std::string_view
}
class "http_handler::ApiRequestHandler" as C_0000529223606003699735
class C_0000529223606003699735 {
+ApiRequestHandler(model::Game & game, fs::path path) : void
..
+GameRequest<Handler>(http_handler::StringRequest && request, const Handler & json_response, const std::vector<std::string> & path_components) : http_handler::StringResponse
-GetMapDetailsRequest<Handler>(std::string_view map_id, const Handler & json_response) const : http_handler::StringResponse
-GetMapsRequest<Handler>(const Handler & json_response) const : http_handler::StringResponse
+HandleRequest<Handler>(http_handler::StringRequest && request, const Handler & json_response) : http_handler::StringResponse
+MapRequest<Handler>(http_handler::StringRequest && request, const Handler & json_response, const std::vector<std::string> & path_components) : http_handler::StringResponse
__
-game_ : model::Game &
-root_dir_ : fs::path
}
class "http_handler::FileRequestHandler" as C_0002160141078278443579
class C_0002160141078278443579 {
+FileRequestHandler(model::Game & game, fs::path path) : void
..
+HandleRequest<Handler>(http_handler::StringRequest && request, const Handler & json_response) : http_handler::ResponseVariant
__
-game_ : model::Game &
-root_dir_ : fs::path
}
class "http_handler::RequestHandler" as C_0001715404582304047665
class C_0001715404582304047665 {
+RequestHandler(model::Game & game, http_handler::RequestHandler::Strand api_strand, fs::path path) : void
+RequestHandler(const http_handler::RequestHandler &) = deleted : void
..
+operator=(const http_handler::RequestHandler &) = deleted : http_handler::RequestHandler &
..
+operator()<Body,Allocator,Send>(http::request<Body,http::basic_fields<Allocator>> && req, Send && send) : http::response<http::empty_body>
..
-CopyResponseWithoutBody(const http_handler::ResponseVariant & response) const : boost::beast::http::message<http::empty_body>
+HandleRequest(http_handler::StringRequest && req) : http_handler::ResponseVariant
-handleIntermediateRequest() : bool
-handleMap1Request() : bool
-handleMapsRequest() : bool
-handleRootRequest() : bool
__
-api_handler_ : http_handler::ApiRequestHandler
-api_strand_ : http_handler::RequestHandler::Strand
-file_handler_ : http_handler::FileRequestHandler
-game_ : model::Game &
-root_dir_ : fs::path
-router_ : std::unique_ptr<router::Router>
}
class "http_handler::LoggingRequestHandler<SomeRequestHandler>" as C_0000187824893867546430
class C_0000187824893867546430 {
+LoggingRequestHandler(SomeRequestHandler & handler) : void
..
+operator()<Body,Allocator,Send>(http::request<Body,http::basic_fields<Allocator>> && req, Send && send) : void
..
{static} -LogRequest<Body,Allocator>(http::request<Body,http::basic_fields<Allocator>> & req) : void
{static} -LogResponse(boost::beast::http::message<http::empty_body> & response, int resp_duration) : void
__
-request_handler_ : SomeRequestHandler &
}
class "router::TrieNode" as C_0001721980744413703462
class C_0001721980744413703462 {
+TrieNode() = default : void
__
+children : std::unordered_map<std::string,std::unique_ptr<TrieNode>>
+handlers : std::vector<ResponseMaker>
+intermediateHandlers : std::vector<ResponseMaker>
}
class "router::Trie" as C_0000318064410950524216
class C_0000318064410950524216 {
+Trie() : void
..
+AddRoute(const std::string & method, const std::string & path, router::ResponseMaker handler, bool intermediate = false) : void
+GetHandlers(const std::string & method, const std::string & path) : std::vector<ResponseMaker> *
-GetNode(router::TrieNode * node, const std::string & segment) : router::TrieNode *
-SplitPath(const std::string & path) : std::vector<std::string>
__
-root_ : std::unique_ptr<TrieNode>
}
class "router::Router" as C_0001341948926424665450
class C_0001341948926424665450 {
+Router() : void
..
+AddRoute(const std::vector<std::string> & methods, const std::string & path, router::ResponseMaker handler, bool intermediate = false) : void
+Route(const router::StringRequest & req) : router::ResponseVariant
__
-trie_ : std::unique_ptr<Trie>
}
C_0001715404582304047665 o- - C_0002160141078278443579 : -file_handler_
C_0001715404582304047665 o- - C_0000529223606003699735 : -api_handler_
C_0001715404582304047665 o- - C_0001341948926424665450 : -router_
C_0001721980744413703462 o- - C_0001721980744413703462 : +children
C_0000318064410950524216 o- - C_0001721980744413703462 : -root_
C_0001341948926424665450 o- - C_0000318064410950524216 : -trie_

@enduml

PlantUML version 1.2020.02(Sun Mar 01 13:22:07 MSK 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.22+7-post-Ubuntu-0ubuntu222.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>